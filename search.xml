<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PYTHON数据库访问</title>
      <link href="2021/03/10/python-shu-ju-ku-fang-wen/"/>
      <url>2021/03/10/python-shu-ju-ku-fang-wen/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Python数据库访问模块"><a href="#一、Python数据库访问模块" class="headerlink" title="一、Python数据库访问模块"></a>一、Python数据库访问模块</h1><p><strong>通用数据库访问模块：ODBC&amp;JDBC</strong></p><ul><li>ODBC Interface: PythonWin附带</li><li>pyodbc: 开源，完整实现DB-API2.0</li><li>mxPDBS: 付费，部分实现DB-API2.0</li><li>zxJDBC: Jython2.1+包含</li></ul><p><strong>专用数据库访问模块</strong></p><ul><li>MySQL: MySQL-python(MySQLdb，过时)、mysqlclient、pymysql、sqlalchemy(ORM框架，Web编程）</li><li>PostgreSQL: PyGreSQL</li><li>Oracle: DCOracle2</li><li>SQLServer: pymssql<h1 id="二、SQLite数据库"><a href="#二、SQLite数据库" class="headerlink" title="二、SQLite数据库"></a>二、SQLite数据库</h1>SQLite是一款开源的轻型的数据库</li><li>简单、资源低占用</li><li>实现了大部分SQL-92标准</li><li>无类型检查，适用于脚本语言</li><li>整个SQLite数据库存于一个文件<br>  SQLite支持的数据类型包括：NULL、INTEGER、REAL、TEXT和BLOB，分别对应Python的数据类型：None、int、float、str和bytes</li></ul><p><strong>sqlite3模块</strong><br>C实现，提供访问和操作SQLite数据库的各种功能<br>sqlite3模块：</p><ul><li>sqlite3.version    #常量</li><li>sqlite3.connect(database)    #函数，返回Connect对象</li><li>sqlite3.Connect    #数据库连接对象</li><li>sqlite3.Cursor    #游标对象</li><li>sqlite3.Row    #行对象<h1 id="三、连接和操作SQLITE数据库"><a href="#三、连接和操作SQLITE数据库" class="headerlink" title="三、连接和操作SQLITE数据库"></a>三、连接和操作SQLITE数据库</h1>Python访问数据库的典型步骤：</li></ul><ol><li>导入相应的数据库模块</li><li>建立数据库连接，返回Connection对象</li></ol><pre class=" language-python"><code class="language-python">con<span class="token operator">=</span>sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>r<span class="token string">"c:\python\sales.db"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#r是对字符'\'转义</span>con<span class="token operator">=</span>pymsql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'abc'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'123456'</span><span class="token punctuation">,</span>db<span class="token operator">=</span><span class="token string">'test1'</span><span class="token punctuation">,</span>charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#服务器端数据库的连接</span></code></pre><ol start="3"><li>创建游标对象cur</li><li>使用Cursor对象得到execute执行SQL命令返回结果<br>（建议直接使用Connection对象的execute方法，返回Cursor对象）</li></ol><pre class=" language-python"><code class="language-python">cur<span class="token operator">=</span>con<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select id,name from region"</span><span class="token punctuation">)</span>regions<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">"021"</span><span class="token punctuation">,</span><span class="token string">"上海"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"022"</span><span class="token punctuation">,</span><span class="token string">"天津"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"023"</span><span class="token punctuation">,</span><span class="token string">"重庆"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"024"</span><span class="token punctuation">,</span><span class="token string">"沈阳"</span><span class="token punctuation">)</span><span class="token punctuation">]</span>con<span class="token punctuation">.</span>executemany<span class="token punctuation">(</span><span class="token string">"insert into region(id,name) values(?,?)"</span><span class="token punctuation">,</span>regions<span class="token punctuation">)</span></code></pre><ol start="5"><li>获取游标的查询结果集Cursor.fetch()</li></ol><pre class=" language-python"><code class="language-python">cor<span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#返回结果集的下一行(Row对象)，或None</span>cor<span class="token punctuation">.</span>fetchall<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#返回结果集的剩余行(Row对象列表)，或空表</span>cor<span class="token punctuation">.</span>fetchmany<span class="token punctuation">(</span>n<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#返回结果集的多行(Row对象列表)，或空表</span>cor<span class="token punctuation">.</span>rowcount    <span class="token comment" spellcheck="true">#执行sql命令实际影响的行数</span></code></pre><p>Row对象r为一行查询结果序列，支持以下访问</p><pre class=" language-python"><code class="language-python">r<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token comment" spellcheck="true">#按索引访问，返回第i列数据</span>r<span class="token punctuation">[</span>colname<span class="token punctuation">]</span>    <span class="token comment" spellcheck="true">#按列名访问，返回colname列数据</span>len<span class="token punctuation">(</span>r<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#返回列数</span>r<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#返回列名列表</span><span class="token comment" spellcheck="true">#应用</span><span class="token keyword">for</span> r <span class="token keyword">in</span> con<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"select id,name from region"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>r<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><ol start="6"><li>数据库的提交和回滚</li></ol><pre class=" language-python"><code class="language-python">con<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#提交</span>con<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#回滚</span></code></pre><ol start="7"><li>关闭Cursor对象和Connection对象</li></ol><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#cur.close()    #关闭游标</span><span class="token comment" spellcheck="true">#con.close()    #关闭数据库</span>r<span class="token operator">=</span>con<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"delete from region where id=?"</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token string">"024"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'删除了'</span><span class="token punctuation">,</span>r<span class="token punctuation">.</span>rowcount<span class="token punctuation">,</span><span class="token string">'行记录'</span><span class="token punctuation">)</span>con<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#提交</span>con<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#关闭数据库</span></code></pre><h1 id="四、PYTHON使用MYSQL数据库"><a href="#四、PYTHON使用MYSQL数据库" class="headerlink" title="四、PYTHON使用MYSQL数据库"></a>四、PYTHON使用MYSQL数据库</h1><p>要使用Python操作MySQL，首先需要安装MySQL-Python的包，可用pip方式安装：pip install MySQLClient。<br>启动MySQL服务器：以管理员身份启动cmd，输入命令：net start mysql<br>Python中使用MySQL: import MySQLdb<br>创建Connection</p><pre class=" language-python"><code class="language-python">con<span class="token operator">=</span>MySQLdb<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>port<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'abc'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'123456'</span><span class="token punctuation">,</span>db<span class="token operator">=</span><span class="token string">'test1'</span><span class="token punctuation">,</span>charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span></code></pre><p>Connection支持的方法：</p><ul><li>cursor()    #创建并返回游标</li><li>commit()    #提交当前事务</li><li>rollback()    #回滚当前事务</li><li>close()    #关闭Connection</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#MySQL示例</span>conn<span class="token operator">=</span>MySQLdb<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>post<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string">'abc'</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string">'123456'</span><span class="token punctuation">,</span>db<span class="token operator">=</span><span class="token string">'test1'</span><span class="token punctuation">,</span>charset<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>cur<span class="token operator">=</span>conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token triple-quoted-string string">"""create table if not EXISTS user(userid int(11) PRIMARY KEY,username VARCHAR(20))"""</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"insert into user(userid,username) values('%d','%s')"</span><span class="token operator">%</span><span class="token punctuation">(</span>int<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'name'</span><span class="token operator">+</span>str<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'select * from user'</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    cursor<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">'update user set username="name91" where userid=9'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span>rowcount<span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>    conn<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数值、日期和时间处理</title>
      <link href="2021/03/10/shu-zhi-ri-qi-he-shi-jian-chu-li/"/>
      <url>2021/03/10/shu-zhi-ri-qi-he-shi-jian-chu-li/</url>
      
        <content type="html"><![CDATA[<h1 id="1、相关模块概述"><a href="#1、相关模块概述" class="headerlink" title="1、相关模块概述"></a>1、相关模块概述</h1><h2 id="1-数值处理的相关模块"><a href="#1-数值处理的相关模块" class="headerlink" title="1.数值处理的相关模块"></a>1.数值处理的相关模块</h2><h3 id="（1）Python标准款中包括下列数值处理相关模块"><a href="#（1）Python标准款中包括下列数值处理相关模块" class="headerlink" title="（1）Python标准款中包括下列数值处理相关模块"></a>（1）Python标准款中包括下列数值处理相关模块</h3><ul><li>numbers模块：数值抽象类。包含类Complex、Real、Rational、Integral。</li><li>math模块：数学函数</li><li>cmath模块：复数运算数学函数</li><li>decimal模块：高精度数值运算</li><li>fractions模块：分数运算模块</li><li>random模块：随机数模块<br><img src="https://www.hualigs.cn/image/6048d9b722e3a.jpg" alt=""></li></ul><h3 id="（2）数值运算模块Numpy。"><a href="#（2）数值运算模块Numpy。" class="headerlink" title="（2）数值运算模块Numpy。"></a>（2）数值运算模块Numpy。</h3><p>Numpy模块主要提供数组和矩阵处理功能，还包括高级功能，如傅里叶变换等。</p><h3 id="（3）科学计算模块SciPy。"><a href="#（3）科学计算模块SciPy。" class="headerlink" title="（3）科学计算模块SciPy。"></a>（3）科学计算模块SciPy。</h3><p>SciPy模块包括统计、优化、整合、线性代数、傅里叶变换、信号和图像处理、常微分方程求解器等功能。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#random应用</span><span class="token comment" spellcheck="true">#随机生成扑克牌的四手牌（4个人的牌局，每手牌13张）</span><span class="token keyword">import</span> random<span class="token comment" spellcheck="true">#一副牌：Club（梅花）、Diamond（方块）、Heart（红桃）、Spade（黑桃）</span>cards<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'2C'</span><span class="token punctuation">,</span><span class="token string">'3C'</span><span class="token punctuation">,</span><span class="token string">'4C'</span><span class="token punctuation">,</span><span class="token string">'5C'</span><span class="token punctuation">,</span><span class="token string">'6C'</span><span class="token punctuation">,</span><span class="token string">'7C'</span><span class="token punctuation">,</span><span class="token string">'8C'</span><span class="token punctuation">,</span><span class="token string">'9C'</span><span class="token punctuation">,</span><span class="token string">'10C'</span><span class="token punctuation">,</span><span class="token string">'JC'</span><span class="token punctuation">,</span><span class="token string">'QC'</span><span class="token punctuation">,</span><span class="token string">'KC'</span><span class="token punctuation">,</span><span class="token string">'AC'</span><span class="token punctuation">,</span>       <span class="token string">'2D'</span><span class="token punctuation">,</span><span class="token string">'3C'</span><span class="token punctuation">,</span><span class="token string">'4D'</span><span class="token punctuation">,</span><span class="token string">'5D'</span><span class="token punctuation">,</span><span class="token string">'6D'</span><span class="token punctuation">,</span><span class="token string">'7D'</span><span class="token punctuation">,</span><span class="token string">'8D'</span><span class="token punctuation">,</span><span class="token string">'9D'</span><span class="token punctuation">,</span><span class="token string">'10D'</span><span class="token punctuation">,</span><span class="token string">'JD'</span><span class="token punctuation">,</span><span class="token string">'QD'</span><span class="token punctuation">,</span><span class="token string">'KD'</span><span class="token punctuation">,</span><span class="token string">'AD'</span><span class="token punctuation">,</span>       <span class="token string">'2H'</span><span class="token punctuation">,</span><span class="token string">'3H'</span><span class="token punctuation">,</span><span class="token string">'4H'</span><span class="token punctuation">,</span><span class="token string">'5H'</span><span class="token punctuation">,</span><span class="token string">'6H'</span><span class="token punctuation">,</span><span class="token string">'7H'</span><span class="token punctuation">,</span><span class="token string">'8H'</span><span class="token punctuation">,</span><span class="token string">'9H'</span><span class="token punctuation">,</span><span class="token string">'10H'</span><span class="token punctuation">,</span><span class="token string">'JH'</span><span class="token punctuation">,</span><span class="token string">'QH'</span><span class="token punctuation">,</span><span class="token string">'KH'</span><span class="token punctuation">,</span><span class="token string">'AH'</span><span class="token punctuation">,</span>       <span class="token string">'2S'</span><span class="token punctuation">,</span><span class="token string">'3S'</span><span class="token punctuation">,</span><span class="token string">'4S'</span><span class="token punctuation">,</span><span class="token string">'5S'</span><span class="token punctuation">,</span><span class="token string">'6S'</span><span class="token punctuation">,</span><span class="token string">'7S'</span><span class="token punctuation">,</span><span class="token string">'8S'</span><span class="token punctuation">,</span><span class="token string">'9S'</span><span class="token punctuation">,</span><span class="token string">'10S'</span><span class="token punctuation">,</span><span class="token string">'JS'</span><span class="token punctuation">,</span><span class="token string">'QS'</span><span class="token punctuation">,</span><span class="token string">'KS'</span><span class="token punctuation">,</span><span class="token string">'AS'</span><span class="token punctuation">]</span>random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>cards<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#混排，洗牌</span>deck1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>deck2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>deck3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>deck4<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment" spellcheck="true">#初始化四手牌</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#发牌</span>    deck1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cards<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    deck2<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cards<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    deck3<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cards<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    deck4<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cards<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>deck1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>deck2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>deck3<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>deck4<span class="token punctuation">)</span>       </code></pre><h2 id="2-数值运算模块NUMPY"><a href="#2-数值运算模块NUMPY" class="headerlink" title="2.数值运算模块NUMPY"></a>2.数值运算模块NUMPY</h2><h3 id="（1）创建数组"><a href="#（1）创建数组" class="headerlink" title="（1）创建数组"></a>（1）创建数组</h3><p>（1）通过array函数，把序列对象参数转化为数组</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa<span class="token operator">=</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b<span class="token operator">=</span>mp<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>（2）通过arrange、linspace和logspace函数创建数组</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> npa<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#从start到stop，2为步长</span>b<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#从0到2pi，创建长度为10的等差数列数组</span>c<span class="token operator">=</span>np<span class="token punctuation">.</span>logspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#等比数列</span></code></pre><p><img src="https://www.hualigs.cn/image/6048d9b14717c.jpg" alt=""></p><h3 id="（2）数组应用"><a href="#（2）数组应用" class="headerlink" title="（2）数组应用"></a>（2）数组应用</h3><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#绘制正弦余弦函数图形</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt <span class="token keyword">import</span> mathx<span class="token operator">=</span>np<span class="token punctuation">.</span>linspace<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>y1<span class="token operator">=</span>np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>y2<span class="token operator">=</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y2<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.hualigs.cn/image/6048d9b12e910.jpg" alt="">                                       </p><h1 id="2、日期和时间处理概述"><a href="#2、日期和时间处理概述" class="headerlink" title="2、日期和时间处理概述"></a>2、日期和时间处理概述</h1><ul><li><p>datetime模块：日期和时间类</p></li><li><p>calendar模块：日历函数和类</p></li><li><p>time模块：时间函数</p><h2 id="1-DATETIME模块"><a href="#1-DATETIME模块" class="headerlink" title="1.DATETIME模块"></a>1.DATETIME模块</h2></li><li><p>两个常量：datetime.MINTEAR(1)和datetime.MAXYEAR(9999)</p></li><li><p>获取当前日期时间<br>  通过datetime模块的date.today()函数可以返回表示当前日期的date对象，通过其实例对象方法，可以获取其年、月、日等信息</p><p>  通过datime模块的datetime.now()函数可以返回表示当前日期时间的datetime对象，通过其实例对象方法，可以获取其年、月、日、时、分、秒等信息</p><h2 id="2-time模块"><a href="#2-time模块" class="headerlink" title="2.time模块"></a>2.time模块</h2></li><li><p>time模块中的strftime()函数将struct_time对象格式化为字符串</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#日期时间格式化为字符串示例</span><span class="token keyword">from</span> time <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">print</span><span class="token punctuation">(</span>strftime<span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y{y}%m{m}%d{d}%H{h}%M{f}%S{s}'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>y<span class="token operator">=</span><span class="token string">'年'</span><span class="token punctuation">,</span>m<span class="token operator">=</span><span class="token string">'月'</span><span class="token punctuation">,</span>d<span class="token operator">=</span><span class="token string">'日'</span><span class="token punctuation">,</span>h<span class="token operator">=</span><span class="token string">'时'</span><span class="token punctuation">,</span>f<span class="token operator">=</span><span class="token string">'分'</span><span class="token punctuation">,</span>s<span class="token operator">=</span><span class="token string">'秒'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p>time模块中的strptime()函数将时间字符串解析为struct_time对象</p></li></ul><h1 id="3、字符串和文本处理的相关模块"><a href="#3、字符串和文本处理的相关模块" class="headerlink" title="3、字符串和文本处理的相关模块"></a>3、字符串和文本处理的相关模块</h1><ul><li>string模块：包含若干字符集常量，其处理字符串的函数已经被字符串对象的方法替代</li><li>re模块：正则表达式处理</li><li>codecs模块：字符编码处理</li><li>difflib模块：比较字符串列表的差异</li><li>gettext模块：语言国际化</li><li>textwrap模块：格式化文本段落</li><li>unicodedata模块：Unicode字符库<br>3/10/2021 10:56:22 PM </li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于MATOLOTLIB模块的绘图</title>
      <link href="2021/03/09/ji-yu-matolotlib-mo-kuai-de-hui-tu/"/>
      <url>2021/03/09/ji-yu-matolotlib-mo-kuai-de-hui-tu/</url>
      
        <content type="html"><![CDATA[<p>Matplotlib是一套面向对象的绘图库，其绘制的图表中的每个绘图元素（例如线条、文字、刻度等）都是对象</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#绘制x轴坐标值为0、1、2、3、4，所对应的y轴坐标值为1、2、5、6、8的折线图</span><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltplt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'some numbers'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.hualigs.cn/image/60476819d3dd7.jpg" alt=""></p><p>plot()函数</p><ul><li>plot(x,y,’bo’)    #用蓝色，小圆点标记</li></ul><ul><li>plot(y)    #改变纵轴坐标数值，横轴默认0,1,2……</li></ul><ul><li>plot(x1,y1,’g^’,x2,y2,’g-o’)    #使用多个x,y,format对作变量，把它们画在一个图里，格式串也可改为color=’green’,linestyle=’dashen’,marker=’o’。</li></ul><p>subplot(numRows,numCols,plotNum)快速绘制包含多个子图的图表，左上的子区域的编号为1，若numRows, numCols和plotNum这三个数都小于10的话，可缩写为一个整数，例如subplot(323)等价于subplot(3,2,3)，subplot在plotNum指定的区域中创建一个轴对象。</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#使用Matplotlib模块绘制y=sin(x)的函数曲线</span><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> mathx<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">*</span>math<span class="token punctuation">.</span>pi<span class="token operator">*</span>i<span class="token operator">/</span><span class="token number">100</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">]</span>y<span class="token operator">=</span><span class="token punctuation">[</span>math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> x<span class="token punctuation">]</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.hualigs.cn/image/604764dc6bfb2.jpg" alt=""></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#利用NumPy模块和Matplotlib.pyplot工具包绘制y=e^-x*cos(2*pi*x)以及y=cos(2*pi*x)的函数曲线</span><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> np<span class="token punctuation">.</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>t<span class="token punctuation">)</span><span class="token operator">*</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">*</span>t<span class="token punctuation">)</span>t1<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">5.0</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">)</span>t2<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">5.0</span><span class="token punctuation">,</span><span class="token number">0.02</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">211</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t1<span class="token punctuation">,</span>f<span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'bo'</span><span class="token punctuation">,</span>t2<span class="token punctuation">,</span>f<span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'k'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>t2<span class="token punctuation">,</span>np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>np<span class="token punctuation">.</span>pi<span class="token operator">*</span>t2<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'r--'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.hualigs.cn/image/604764dc3b957.jpg" alt=""></p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#随机生成满足mu为100、sigma为20的正态分布数据，并绘制其直方图</span><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np mu<span class="token punctuation">,</span>sigma<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">20</span>x<span class="token operator">=</span>mu<span class="token operator">+</span>sigma<span class="token operator">*</span>np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randn<span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span>density<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>facecolor<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span>alpha<span class="token operator">=</span><span class="token number">0.75</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#绘制直方图</span>plt<span class="token punctuation">.</span>xlabel<span class="token punctuation">(</span><span class="token string">'IQ'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#绘制坐标等信息</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">'Probability'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Histogram of IQ'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>axis<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">180</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0.03</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#设置坐标和网格</span>plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p><img src="https://www.hualigs.cn/image/604764dc6e394.jpg" alt=""><br>                                      ​<br>3/9/2021 8:23:59 PM </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>你好 CODING</title>
      <link href="2021/03/04/hello-world/"/>
      <url>2021/03/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎使用 <a href="https://help.coding.net/docs/cd/static-website-v2.html" target="_blank" rel="noopener">CODING DevOps 静态网站</a> 部署 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 应用！<br>您可以到这里查看更多的 Hexo 的 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">文档</a>。</p><p>这是你的第一篇文章。</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>相关帮助: <a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="noopener">写作</a></p><h3 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>相关帮助: <a href="https://hexo.io/zh-cn/docs/server.html" target="_blank" rel="noopener">服务器</a></p><h3 id="部署到线上"><a href="#部署到线上" class="headerlink" title="部署到线上"></a>部署到线上</h3><pre class=" language-bash"><code class="language-bash">$ <span class="token function">git</span> add <span class="token keyword">.</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> commit -m <span class="token string">'new post'</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> push</code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
